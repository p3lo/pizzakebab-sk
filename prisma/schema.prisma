// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Pizza {
  id          Int            @id @default(autoincrement())
  name        String
  description String
  size32cm    Size32CmPizza?
  size50cm    Size50CmPizza?
}

model Size32CmPizza {
  id      Int    @id @default(autoincrement())
  weight  Int
  price   Float
  pizza   Pizza? @relation(fields: [pizzaId], references: [id])
  pizzaId Int?   @unique
}

model Size50CmPizza {
  id      Int    @id @default(autoincrement())
  weight  Int
  price   Float
  pizza   Pizza? @relation(fields: [pizzaId], references: [id])
  pizzaId Int?   @unique
}

model Pizzaprilohy {
  id          Int                   @id @default(autoincrement())
  name        String
  prilohy32cm PrilohySize32CmPizza?
  prilohy50cm PrilohySize50CmPizza?
}

model PrilohySize32CmPizza {
  id        Int           @id @default(autoincrement())
  weight    Int?
  price     Float
  priloha   Pizzaprilohy? @relation(fields: [prilohaId], references: [id])
  prilohaId Int?          @unique
}

model PrilohySize50CmPizza {
  id        Int           @id @default(autoincrement())
  weight    Int?
  price     Float
  priloha   Pizzaprilohy? @relation(fields: [prilohaId], references: [id])
  prilohaId Int?          @unique
}

model Kebab {
  id          Int             @id @default(autoincrement())
  name        String
  description String
  sizeSmall   SizeSmallKebab?
  sizeLarge   SizeLargeKebab?
}

model SizeSmallKebab {
  id      Int    @id @default(autoincrement())
  weight  Int
  price   Float
  kebab   Kebab? @relation(fields: [kebabId], references: [id])
  kebabId Int?   @unique
}

model SizeLargeKebab {
  id      Int    @id @default(autoincrement())
  weight  Int
  price   Float
  kebab   Kebab? @relation(fields: [kebabId], references: [id])
  kebabId Int?   @unique
}

model Bageta {
  id          Int              @id @default(autoincrement())
  name        String
  description String
  sizeSmall   SizeSmallBageta?
  sizeLarge   SizeLargeBageta?
}

model SizeSmallBageta {
  id       Int     @id @default(autoincrement())
  weight   Int
  price    Float
  Bageta   Bageta? @relation(fields: [bagetaId], references: [id])
  bagetaId Int?    @unique
}

model SizeLargeBageta {
  id       Int     @id @default(autoincrement())
  weight   Int
  price    Float
  Bageta   Bageta? @relation(fields: [bagetaId], references: [id])
  bagetaId Int?    @unique
}

model Salat {
  id          Int    @id @default(autoincrement())
  name        String
  description String
  weight      Int
  price       Float
}

model Drink {
  id          Int    @id @default(autoincrement())
  name        String
  description String
  type        String
  price       Float
}

model Other {
  id          Int    @id @default(autoincrement())
  name        String
  description String
  weight      Int
  price       Float
}

model Cart {
  id      Int          @id @default(autoincrement())
  pizzas  PizzaCart[]
  kebabs  KebabCart[]
  bagetas BagetaCart[]
  salats  SalatCart[]
  drinks  DrinkCart[]
  others  OtherCart[]
  user    User         @relation(fields: [userId], references: [userId], onDelete: Cascade)
  userId  String       @unique
}

model PizzaCart {
  id          Int                @id @default(autoincrement())
  name        String
  description String
  size        String
  weight      Int
  price       Float
  Cart        Cart?              @relation(fields: [cartId], references: [id], onDelete: Cascade)
  cartId      Int?
  prilohy     PizzaCartPriloha[]
}

model PizzaCartPriloha {
  id        Int        @id @default(autoincrement())
  name      String
  weight    Int
  price     Float
  pizzaCart PizzaCart? @relation(fields: [cartId], references: [id], onDelete: Cascade)
  cartId    Int?
}

model KebabCart {
  id          Int    @id @default(autoincrement())
  name        String
  description String
  weight      Int
  size        String
  price       Float
  Cart        Cart?  @relation(fields: [cartId], references: [id], onDelete: Cascade)
  cartId      Int?
}

model BagetaCart {
  id          Int    @id @default(autoincrement())
  name        String
  description String
  weight      Int
  size        String
  price       Float
  Cart        Cart?  @relation(fields: [cartId], references: [id], onDelete: Cascade)
  cartId      Int?
}

model SalatCart {
  id          Int    @id @default(autoincrement())
  name        String
  description String
  weight      Int
  price       Float
  Cart        Cart?  @relation(fields: [cartId], references: [id], onDelete: Cascade)
  cartId      Int?
}

model DrinkCart {
  id          Int    @id @default(autoincrement())
  name        String
  description String
  price       Float
  Cart        Cart?  @relation(fields: [cartId], references: [id], onDelete: Cascade)
  cartId      Int?
}

model OtherCart {
  id          Int    @id @default(autoincrement())
  name        String
  description String
  weight      Int
  price       Float
  Cart        Cart?  @relation(fields: [cartId], references: [id], onDelete: Cascade)
  cartId      Int?
}

model User {
  id      Int     @id @default(autoincrement())
  userId  String  @unique
  name    String?
  surname String?
  address String?
  city    String?
  email   String?
  phone   String?
  cart    Cart[]
  orders  Order[]
}

model Order {
  id      Int           @id @default(autoincrement())
  pizzas  PizzaOrder[]
  kebabs  KebabOrder[]
  bagetas BagetaOrder[]
  salats  SalatOrder[]
  drinks  DrinkOrder[]
  others  OtherOrder[]
  user    User?         @relation(fields: [userId], references: [userId], onDelete: Cascade)
  userId  String
}

model PizzaOrder {
  id          Int                 @id @default(autoincrement())
  name        String
  description String
  size        String
  weight      Int
  price       Float
  order       Order?              @relation(fields: [orderId], references: [id], onDelete: Cascade)
  orderId     Int?
  prilohy     PizzaOrderPriloha[]
}

model PizzaOrderPriloha {
  id         Int         @id @default(autoincrement())
  name       String
  weight     Int
  price      Float
  pizzaOrder PizzaOrder? @relation(fields: [orderId], references: [id], onDelete: Cascade)
  orderId    Int?
}

model KebabOrder {
  id          Int    @id @default(autoincrement())
  name        String
  description String
  weight      Int
  size        String
  price       Float
  Order       Order? @relation(fields: [orderId], references: [id], onDelete: Cascade)
  orderId     Int?
}

model BagetaOrder {
  id          Int    @id @default(autoincrement())
  name        String
  description String
  weight      Int
  size        String
  price       Float
  Order       Order? @relation(fields: [orderId], references: [id], onDelete: Cascade)
  orderId     Int?
}

model SalatOrder {
  id          Int    @id @default(autoincrement())
  name        String
  description String
  weight      Int
  price       Float
  Order       Order? @relation(fields: [orderId], references: [id], onDelete: Cascade)
  orderId     Int?
}

model DrinkOrder {
  id          Int    @id @default(autoincrement())
  name        String
  description String
  price       Float
  Order       Order? @relation(fields: [orderId], references: [id], onDelete: Cascade)
  orderId     Int?
}

model OtherOrder {
  id          Int    @id @default(autoincrement())
  name        String
  description String
  weight      Int
  price       Float
  Order       Order? @relation(fields: [orderId], references: [id], onDelete: Cascade)
  orderId     Int?
}
